{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"jQuery\"","webpack:///./node_modules/penpal/lib/createDestructor.js","webpack:///./node_modules/penpal/lib/parent/getOriginFromSrc.js","webpack:///./node_modules/penpal/lib/enums.js","webpack:///./node_modules/penpal/lib/createLogger.js","webpack:///./node_modules/penpal/lib/errorSerialization.js","webpack:///./node_modules/penpal/lib/connectCallReceiver.js","webpack:///./node_modules/penpal/lib/generateId.js","webpack:///./node_modules/penpal/lib/connectCallSender.js","webpack:///./node_modules/penpal/lib/parent/monitorIframeRemoval.js","webpack:///./node_modules/penpal/lib/startConnectionTimeout.js","webpack:///./node_modules/penpal/lib/parent/connectToChild.js","webpack:///./node_modules/penpal/lib/parent/validateIframeHasSrcOrSrcDoc.js","webpack:///./node_modules/penpal/lib/parent/handleSynMessageFactory.js","webpack:///./node_modules/penpal/lib/parent/handleAckMessageFactory.js","webpack:///./node_modules/penpal/lib/child/connectToParent.js","webpack:///./src/constants/cystackConfig.js","webpack:///./src/api/wordpressClient.js","webpack:///./src/lib/Interframe.js","webpack:///./src/utils/queryParams.js","webpack:///./src/api/wordpressApi.js","webpack:///./src/utils/targetInfo.js","webpack:///./src/app.js","webpack:///./src/lib/iframe.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","callbacks","destroyed","error","forEach","callback","push","DEFAULT_PORT_BY_PROTOCOL","URL_REGEX","opaqueOriginSchemes","MessageType","Resolution","ErrorCode","NativeErrorName","NativeEventType","args","debug","console","log","serializeError","message","stack","localName","local","remote","originForSending","originForReceiving","info","handleMessageEvent","event","source","data","penpal","Call","origin","callMessage","methodName","id","createPromiseHandler","resolution","returnValue","Reply","Rejected","Error","returnValueIsError","postMessage","err","DataCloneError","errorReplyMessage","Promise","resolve","methods","apply","then","Fulfilled","addEventListener","Message","removeEventListener","createMethodProxy","iframeRemoved","closed","e","destroyConnection","code","ConnectionDestroyed","reject","replyMessage","obj","deserializedError","keys","deserializeError","methodNames","reduce","api","callSender","timeoutId","undefined","timeout","setTimeout","ConnectionTimeout","clearTimeout","iframe","childOrigin","options","createLogger","destructor","createDestructor","onDestroy","destroy","src","srcdoc","NoIframeSrc","validateIframeHasSrcOrSrcDoc","find","scheme","startsWith","location","document","regexResult","exec","protocol","hostname","port","getOriginFromSrc","handleSynMessage","synAckMessage","SynAck","handleSynMessageFactory","handleAckMessage","destroyCallReceiver","receiverMethodNames","connectCallReceiver","receiverMethodName","destroyCallSender","connectCallSender","handleAckMessageFactory","promise","stopConnectionTimeout","startConnectionTimeout","handleMessage","contentWindow","Syn","Ack","checkIframeInDocIntervalId","setInterval","contains","clearInterval","monitorIframeRemoval","cystackConfig","adminUrl","ajaxUrl","cystackBaseUrl","locale","nonce","phpVersion","pluginPath","plugins","targetId","targetName","targetAddress","cystackEmail","iframeUrl","loginUrl","signupUrl","theme","wpVersion","cystackFeature","homeUrl","post","action","payload","method","url","ajaxPayload","contentType","success","JSON","stringify","$","ajax","makeRequest","cystackPageReload","reload","cystackClearQueryParam","currentWindowLocation","toString","indexOf","substring","newWindowLocation","history","pushState","cystackClearMetaTag","cystackPageRedirect","feature","replaceState","cystackGetTargetInfo","cystackConnectTarget","targetInfo","cystackDisconnectTarget","cystackUpdateEmail","getCystackConfig","initInterframe","cystackChildFrameConnection","connectToChild","createConnectionToiFrame","parse","vars","search","split","length","pair","decodeURIComponent","getQueryParam","redirectToLogin","ready","container","$iframe","append"],"mappings":"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","file":"cystack.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","(function() { module.exports = window[\"jQuery\"]; }());","export default () => {\n    const callbacks = [];\n    let destroyed = false;\n    return {\n        destroy(error) {\n            destroyed = true;\n            callbacks.forEach(callback => {\n                callback(error);\n            });\n        },\n        onDestroy(callback) {\n            destroyed ? callback() : callbacks.push(callback);\n        }\n    };\n};\n","const DEFAULT_PORT_BY_PROTOCOL = {\n    'http:': '80',\n    'https:': '443'\n};\nconst URL_REGEX = /^(https?:)?\\/\\/([^/:]+)?(:(\\d+))?/;\nconst opaqueOriginSchemes = ['file:', 'data:'];\n/**\n * Converts a src value into an origin.\n */\nexport default (src) => {\n    if (src && opaqueOriginSchemes.find(scheme => src.startsWith(scheme))) {\n        // The origin of the child document is an opaque origin and its\n        // serialization is \"null\"\n        // https://html.spec.whatwg.org/multipage/origin.html#origin\n        return 'null';\n    }\n    // Note that if src is undefined, then srcdoc is being used instead of src\n    // and we can follow this same logic below to get the origin of the parent,\n    // which is the origin that we will need to use.\n    const location = document.location;\n    const regexResult = URL_REGEX.exec(src);\n    let protocol;\n    let hostname;\n    let port;\n    if (regexResult) {\n        // It's an absolute URL. Use the parsed info.\n        // regexResult[1] will be undefined if the URL starts with //\n        protocol = (regexResult[1] ? regexResult[1] : location.protocol);\n        hostname = regexResult[2];\n        port = regexResult[4];\n    }\n    else {\n        // It's a relative path. Use the current location's info.\n        protocol = location.protocol;\n        hostname = location.hostname;\n        port = location.port;\n    }\n    // If the port is the default for the protocol, we don't want to add it to the origin string\n    // or it won't match the message's event.origin.\n    const portSuffix = port && port !== DEFAULT_PORT_BY_PROTOCOL[protocol] ? `:${port}` : '';\n    return `${protocol}//${hostname}${portSuffix}`;\n};\n","export var MessageType;\n(function (MessageType) {\n    MessageType[\"Call\"] = \"call\";\n    MessageType[\"Reply\"] = \"reply\";\n    MessageType[\"Syn\"] = \"syn\";\n    MessageType[\"SynAck\"] = \"synAck\";\n    MessageType[\"Ack\"] = \"ack\";\n})(MessageType || (MessageType = {}));\nexport var Resolution;\n(function (Resolution) {\n    Resolution[\"Fulfilled\"] = \"fulfilled\";\n    Resolution[\"Rejected\"] = \"rejected\";\n})(Resolution || (Resolution = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ErrorCode[\"ConnectionDestroyed\"] = \"ConnectionDestroyed\";\n    ErrorCode[\"ConnectionTimeout\"] = \"ConnectionTimeout\";\n    ErrorCode[\"NotInIframe\"] = \"NotInIframe\";\n    ErrorCode[\"NoIframeSrc\"] = \"NoIframeSrc\";\n})(ErrorCode || (ErrorCode = {}));\nexport var NativeErrorName;\n(function (NativeErrorName) {\n    NativeErrorName[\"DataCloneError\"] = \"DataCloneError\";\n})(NativeErrorName || (NativeErrorName = {}));\nexport var NativeEventType;\n(function (NativeEventType) {\n    NativeEventType[\"Message\"] = \"message\";\n})(NativeEventType || (NativeEventType = {}));\n","export default (debug) => {\n    /**\n     * Logs a message if debug is enabled.\n     */\n    return (...args) => {\n        if (debug) {\n            console.log('[Penpal]', ...args); // eslint-disable-line no-console\n        }\n    };\n};\n","/**\n * Converts an error object into a plain object.\n */\nexport const serializeError = ({ name, message, stack }) => ({\n    name,\n    message,\n    stack\n});\n/**\n * Converts a plain object into an error object.\n */\nexport const deserializeError = (obj) => {\n    const deserializedError = new Error();\n    // @ts-ignore\n    Object.keys(obj).forEach(key => (deserializedError[key] = obj[key]));\n    return deserializedError;\n};\n","import { serializeError } from './errorSerialization';\nimport { MessageType, NativeEventType, NativeErrorName, Resolution } from './enums';\n/**\n * Listens for \"call\" messages coming from the remote, executes the corresponding method, and\n * responds with the return value.\n */\nexport default (info, methods, log) => {\n    const { localName, local, remote, originForSending, originForReceiving } = info;\n    let destroyed = false;\n    const handleMessageEvent = (event) => {\n        if (event.source !== remote || event.data.penpal !== MessageType.Call) {\n            return;\n        }\n        if (event.origin !== originForReceiving) {\n            log(`${localName} received message from origin ${event.origin} which did not match expected origin ${originForReceiving}`);\n            return;\n        }\n        const callMessage = event.data;\n        const { methodName, args, id } = callMessage;\n        log(`${localName}: Received ${methodName}() call`);\n        const createPromiseHandler = (resolution) => {\n            return (returnValue) => {\n                log(`${localName}: Sending ${methodName}() reply`);\n                if (destroyed) {\n                    // It's possible to throw an error here, but it would need to be thrown asynchronously\n                    // and would only be catchable using window.onerror. This is because the consumer\n                    // is merely returning a value from their method and not calling any function\n                    // that they could wrap in a try-catch. Even if the consumer were to catch the error,\n                    // the value of doing so is questionable. Instead, we'll just log a message.\n                    log(`${localName}: Unable to send ${methodName}() reply due to destroyed connection`);\n                    return;\n                }\n                const message = {\n                    penpal: MessageType.Reply,\n                    id,\n                    resolution,\n                    returnValue\n                };\n                if (resolution === Resolution.Rejected &&\n                    returnValue instanceof Error) {\n                    message.returnValue = serializeError(returnValue);\n                    message.returnValueIsError = true;\n                }\n                try {\n                    remote.postMessage(message, originForSending);\n                }\n                catch (err) {\n                    // If a consumer attempts to send an object that's not cloneable (e.g., window),\n                    // we want to ensure the receiver's promise gets rejected.\n                    if (err.name === NativeErrorName.DataCloneError) {\n                        const errorReplyMessage = {\n                            penpal: MessageType.Reply,\n                            id,\n                            resolution: Resolution.Rejected,\n                            returnValue: serializeError(err),\n                            returnValueIsError: true\n                        };\n                        remote.postMessage(errorReplyMessage, originForSending);\n                    }\n                    throw err;\n                }\n            };\n        };\n        new Promise(resolve => resolve(methods[methodName].apply(methods, args))).then(createPromiseHandler(Resolution.Fulfilled), createPromiseHandler(Resolution.Rejected));\n    };\n    local.addEventListener(NativeEventType.Message, handleMessageEvent);\n    return () => {\n        destroyed = true;\n        local.removeEventListener(NativeEventType.Message, handleMessageEvent);\n    };\n};\n","let id = 0;\n/**\n * @return {number} A unique ID (not universally unique)\n */\nexport default () => ++id;\n","import generateId from './generateId';\nimport { deserializeError } from './errorSerialization';\nimport { ErrorCode, MessageType, NativeEventType, Resolution } from './enums';\n/**\n * Augments an object with methods that match those defined by the remote. When these methods are\n * called, a \"call\" message will be sent to the remote, the remote's corresponding method will be\n * executed, and the method's return value will be returned via a message.\n * @param {Object} callSender Sender object that should be augmented with methods.\n * @param {Object} info Information about the local and remote windows.\n * @param {Array} methodNames Names of methods available to be called on the remote.\n * @param {Promise} destructionPromise A promise resolved when destroy() is called on the penpal\n * connection.\n * @returns {Object} The call sender object with methods that may be called.\n */\nexport default (callSender, info, methodNames, destroyConnection, log) => {\n    const { localName, local, remote, originForSending, originForReceiving } = info;\n    let destroyed = false;\n    log(`${localName}: Connecting call sender`);\n    const createMethodProxy = (methodName) => {\n        return (...args) => {\n            log(`${localName}: Sending ${methodName}() call`);\n            // This handles the case where the iframe has been removed from the DOM\n            // (and therefore its window closed), the consumer has not yet\n            // called destroy(), and the user calls a method exposed by\n            // the remote. We detect the iframe has been removed and force\n            // a destroy() immediately so that the consumer sees the error saying\n            // the connection has been destroyed. We wrap this check in a try catch\n            // because Edge throws an \"Object expected\" error when accessing\n            // contentWindow.closed on a contentWindow from an iframe that's been\n            // removed from the DOM.\n            let iframeRemoved;\n            try {\n                if (remote.closed) {\n                    iframeRemoved = true;\n                }\n            }\n            catch (e) {\n                iframeRemoved = true;\n            }\n            if (iframeRemoved) {\n                destroyConnection();\n            }\n            if (destroyed) {\n                const error = new Error(`Unable to send ${methodName}() call due ` + `to destroyed connection`);\n                error.code = ErrorCode.ConnectionDestroyed;\n                throw error;\n            }\n            return new Promise((resolve, reject) => {\n                const id = generateId();\n                const handleMessageEvent = (event) => {\n                    if (event.source !== remote ||\n                        event.data.penpal !== MessageType.Reply ||\n                        event.data.id !== id) {\n                        return;\n                    }\n                    if (event.origin !== originForReceiving) {\n                        log(`${localName} received message from origin ${event.origin} which did not match expected origin ${originForReceiving}`);\n                        return;\n                    }\n                    const replyMessage = event.data;\n                    log(`${localName}: Received ${methodName}() reply`);\n                    local.removeEventListener(NativeEventType.Message, handleMessageEvent);\n                    let returnValue = replyMessage.returnValue;\n                    if (replyMessage.returnValueIsError) {\n                        returnValue = deserializeError(returnValue);\n                    }\n                    (replyMessage.resolution === Resolution.Fulfilled ? resolve : reject)(returnValue);\n                };\n                local.addEventListener(NativeEventType.Message, handleMessageEvent);\n                const callMessage = {\n                    penpal: MessageType.Call,\n                    id,\n                    methodName,\n                    args\n                };\n                remote.postMessage(callMessage, originForSending);\n            });\n        };\n    };\n    methodNames.reduce((api, methodName) => {\n        api[methodName] = createMethodProxy(methodName);\n        return api;\n    }, callSender);\n    return () => {\n        destroyed = true;\n    };\n};\n","const CHECK_IFRAME_IN_DOC_INTERVAL = 60000;\n/**\n * Monitors for iframe removal and destroys connection if iframe\n * is found to have been removed from DOM. This is to prevent memory\n * leaks when the iframe is removed from the document and the consumer\n * hasn't called destroy(). Without this, event listeners attached to\n * the window would stick around and since the event handlers have a\n * reference to the iframe in their closures, the iframe would stick\n * around too.\n */\nexport default (iframe, destructor) => {\n    const { destroy, onDestroy } = destructor;\n    const checkIframeInDocIntervalId = setInterval(() => {\n        if (!document.contains(iframe)) {\n            clearInterval(checkIframeInDocIntervalId);\n            destroy();\n        }\n    }, CHECK_IFRAME_IN_DOC_INTERVAL);\n    onDestroy(() => {\n        clearInterval(checkIframeInDocIntervalId);\n    });\n};\n","import { ErrorCode } from './enums';\n/**\n * Starts a timeout and calls the callback with an error\n * if the timeout completes before the stop function is called.\n */\nexport default (timeout, callback) => {\n    let timeoutId;\n    if (timeout !== undefined) {\n        timeoutId = window.setTimeout(() => {\n            const error = new Error(`Connection timed out after ${timeout}ms`);\n            error.code = ErrorCode.ConnectionTimeout;\n            callback(error);\n        }, timeout);\n    }\n    return () => {\n        clearTimeout(timeoutId);\n    };\n};\n","import createDestructor from '../createDestructor';\nimport getOriginFromSrc from './getOriginFromSrc';\nimport createLogger from '../createLogger';\nimport handleSynMessageFactory from './handleSynMessageFactory';\nimport handleAckMessageFactory from './handleAckMessageFactory';\nimport { ErrorCode, MessageType, NativeEventType } from '../enums';\nimport validateIframeHasSrcOrSrcDoc from './validateIframeHasSrcOrSrcDoc';\nimport monitorIframeRemoval from './monitorIframeRemoval';\nimport startConnectionTimeout from '../startConnectionTimeout';\n/**\n * Attempts to establish communication with an iframe.\n */\nexport default (options) => {\n    let { iframe, methods = {}, childOrigin, timeout, debug = false } = options;\n    const log = createLogger(debug);\n    const destructor = createDestructor();\n    const { onDestroy, destroy } = destructor;\n    if (!childOrigin) {\n        validateIframeHasSrcOrSrcDoc(iframe);\n        childOrigin = getOriginFromSrc(iframe.src);\n    }\n    // If event.origin is \"null\", the remote protocol is file: or data: and we\n    // must post messages with \"*\" as targetOrigin when sending messages.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage#Using_window.postMessage_in_extensions\n    const originForSending = childOrigin === 'null' ? '*' : childOrigin;\n    const handleSynMessage = handleSynMessageFactory(log, methods, childOrigin, originForSending);\n    const handleAckMessage = handleAckMessageFactory(methods, childOrigin, originForSending, destructor, log);\n    const promise = new Promise((resolve, reject) => {\n        const stopConnectionTimeout = startConnectionTimeout(timeout, destroy);\n        const handleMessage = (event) => {\n            if (event.source !== iframe.contentWindow || !event.data) {\n                return;\n            }\n            if (event.data.penpal === MessageType.Syn) {\n                handleSynMessage(event);\n                return;\n            }\n            if (event.data.penpal === MessageType.Ack) {\n                const callSender = handleAckMessage(event);\n                if (callSender) {\n                    stopConnectionTimeout();\n                    resolve(callSender);\n                }\n                return;\n            }\n        };\n        window.addEventListener(NativeEventType.Message, handleMessage);\n        log('Parent: Awaiting handshake');\n        monitorIframeRemoval(iframe, destructor);\n        onDestroy((error) => {\n            window.removeEventListener(NativeEventType.Message, handleMessage);\n            if (!error) {\n                error = new Error('Connection destroyed');\n                error.code = ErrorCode.ConnectionDestroyed;\n            }\n            reject(error);\n        });\n    });\n    return {\n        promise,\n        destroy() {\n            // Don't allow consumer to pass an error into destroy.\n            destroy();\n        }\n    };\n};\n","import { ErrorCode } from '../enums';\nexport default (iframe) => {\n    if (!iframe.src && !iframe.srcdoc) {\n        const error = new Error('Iframe must have src or srcdoc property defined.');\n        error.code = ErrorCode.NoIframeSrc;\n        throw error;\n    }\n};\n","import { MessageType } from '../enums';\n/**\n * Handles a SYN handshake message.\n */\nexport default (log, methods, childOrigin, originForSending) => {\n    return (event) => {\n        if (event.origin !== childOrigin) {\n            log(`Parent: Handshake - Received SYN message from origin ${event.origin} which did not match expected origin ${childOrigin}`);\n            return;\n        }\n        log('Parent: Handshake - Received SYN, responding with SYN-ACK');\n        const synAckMessage = {\n            penpal: MessageType.SynAck,\n            methodNames: Object.keys(methods)\n        };\n        event.source.postMessage(synAckMessage, originForSending);\n    };\n};\n","import connectCallReceiver from '../connectCallReceiver';\nimport connectCallSender from '../connectCallSender';\n/**\n * Handles an ACK handshake message.\n */\nexport default (methods, childOrigin, originForSending, destructor, log) => {\n    const { destroy, onDestroy } = destructor;\n    let destroyCallReceiver;\n    let receiverMethodNames;\n    // We resolve the promise with the call sender. If the child reconnects\n    // (for example, after refreshing or navigating to another page that\n    // uses Penpal, we'll update the call sender with methods that match the\n    // latest provided by the child.\n    const callSender = {};\n    return (event) => {\n        if (event.origin !== childOrigin) {\n            log(`Parent: Handshake - Received ACK message from origin ${event.origin} which did not match expected origin ${childOrigin}`);\n            return;\n        }\n        log('Parent: Handshake - Received ACK');\n        const info = {\n            localName: 'Parent',\n            local: window,\n            remote: event.source,\n            originForSending: originForSending,\n            originForReceiving: childOrigin\n        };\n        // If the child reconnected, we need to destroy the prior call receiver\n        // before setting up a new one.\n        if (destroyCallReceiver) {\n            destroyCallReceiver();\n        }\n        destroyCallReceiver = connectCallReceiver(info, methods, log);\n        onDestroy(destroyCallReceiver);\n        // If the child reconnected, we need to remove the methods from the\n        // previous call receiver off the sender.\n        if (receiverMethodNames) {\n            receiverMethodNames.forEach(receiverMethodName => {\n                delete callSender[receiverMethodName];\n            });\n        }\n        receiverMethodNames = event.data.methodNames;\n        const destroyCallSender = connectCallSender(callSender, info, receiverMethodNames, destroy, log);\n        onDestroy(destroyCallSender);\n        return callSender;\n    };\n};\n","import createDestructor from '../createDestructor';\nimport createLogger from '../createLogger';\nimport { ErrorCode, MessageType, NativeEventType } from '../enums';\nimport validateWindowIsIframe from './validateWindowIsIframe';\nimport handleSynAckMessageFactory from './handleSynAckMessageFactory';\nimport startConnectionTimeout from '../startConnectionTimeout';\nconst areGlobalsAccessible = () => {\n    try {\n        clearTimeout();\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n};\n/**\n * Attempts to establish communication with the parent window.\n */\nexport default (options = {}) => {\n    const { parentOrigin = '*', methods = {}, timeout, debug = false } = options;\n    const log = createLogger(debug);\n    const destructor = createDestructor();\n    const { destroy, onDestroy } = destructor;\n    validateWindowIsIframe();\n    const handleSynAckMessage = handleSynAckMessageFactory(parentOrigin, methods, destructor, log);\n    const sendSynMessage = () => {\n        log('Child: Handshake - Sending SYN');\n        const synMessage = { penpal: MessageType.Syn };\n        const parentOriginForSyn = parentOrigin instanceof RegExp ? '*' : parentOrigin;\n        window.parent.postMessage(synMessage, parentOriginForSyn);\n    };\n    const promise = new Promise((resolve, reject) => {\n        const stopConnectionTimeout = startConnectionTimeout(timeout, destroy);\n        const handleMessage = (event) => {\n            // Under niche scenarios, we get into this function after\n            // the iframe has been removed from the DOM. In Edge, this\n            // results in \"Object expected\" errors being thrown when we\n            // try to access properties on window (global properties).\n            // For this reason, we try to access a global up front (clearTimeout)\n            // and if it fails we can assume the iframe has been removed\n            // and we ignore the message event.\n            if (!areGlobalsAccessible()) {\n                return;\n            }\n            if (event.source !== parent || !event.data) {\n                return;\n            }\n            if (event.data.penpal === MessageType.SynAck) {\n                const callSender = handleSynAckMessage(event);\n                if (callSender) {\n                    window.removeEventListener(NativeEventType.Message, handleMessage);\n                    stopConnectionTimeout();\n                    resolve(callSender);\n                }\n            }\n        };\n        window.addEventListener(NativeEventType.Message, handleMessage);\n        sendSynMessage();\n        onDestroy((error) => {\n            window.removeEventListener(NativeEventType.Message, handleMessage);\n            if (!error) {\n                error = new Error('Connection destroyed');\n                error.code = ErrorCode.ConnectionDestroyed;\n            }\n            reject(error);\n        });\n    });\n    return {\n        promise,\n        destroy() {\n            // Don't allow consumer to pass an error into destroy.\n            destroy();\n        }\n    };\n};\n","const {\r\n    adminUrl,\r\n    ajaxUrl,\r\n    cystackBaseUrl,\r\n    locale,\r\n    nonce,\r\n    phpVersion,\r\n    pluginPath,\r\n    plugins,\r\n    targetId,\r\n    targetName,\r\n    targetAddress,\r\n    cystackEmail,\r\n    iframeUrl,\r\n    loginUrl,\r\n    signupUrl,\r\n    theme,\r\n    wpVersion,\r\n    cystackFeature,\r\n    homeUrl\r\n} = window.cystackConfig;\r\n\r\nexport {\r\n    adminUrl,\r\n    ajaxUrl,\r\n    cystackBaseUrl,\r\n    locale,\r\n    nonce,\r\n    phpVersion,\r\n    pluginPath,\r\n    plugins,\r\n    targetId,\r\n    targetName,\r\n    targetAddress,\r\n    cystackEmail,\r\n    iframeUrl,\r\n    loginUrl,\r\n    signupUrl,\r\n    theme,\r\n    wpVersion,\r\n    cystackFeature,\r\n    homeUrl\r\n};\r\n","import $ from 'jquery';\r\nimport { ajaxUrl, nonce } from '../constants/cystackConfig';\r\n\r\nfunction makeRequest(action, method, payload) {\r\n  const url = `${ajaxUrl}?action=${action}&_ajax_nonce=${nonce}`;\r\n  return new Promise((resolve, reject) => {\r\n    const ajaxPayload = {\r\n      url,\r\n      method,\r\n      contentType: 'application/json',\r\n      success: data => resolve(data),\r\n      error: error => reject(error),\r\n    };\r\n\r\n    if (payload) {\r\n      ajaxPayload.data = JSON.stringify(payload);\r\n    }\r\n    $.ajax(ajaxPayload);\r\n  });\r\n}\r\n\r\nexport function post(action, payload) {\r\n  const request = makeRequest(action, 'post', payload);\r\n  return request;\r\n}","import { connectToChild } from 'penpal';\r\nimport * as cystackConfig from '../constants/cystackConfig';\r\nimport { cystackClearQueryParam, getQueryParam } from '../utils/queryParams';\r\nimport { cystackGetTargetInfo } from '../utils/targetInfo';\r\nimport {\r\n  cystackClearMetaTag,\r\n  cystackConnectTarget,\r\n  cystackDisconnectTarget,\r\n  cystackUpdateEmail\r\n} from '../api/wordpressApi';\r\n\r\nconst cystackPageReload = () => window.location.reload(true);\r\nconst cystackPageRedirect = feature => {\r\n  window.history.replaceState(null, null, `?page=cystack_${feature}`);\r\n  cystackPageReload();\r\n};\r\nconst methods = {\r\n  cystackClearQueryParam,\r\n  cystackClearMetaTag,\r\n  cystackPageReload,\r\n  cystackPageRedirect,\r\n  cystackGetTargetInfo,\r\n  cystackConnectTarget,\r\n  cystackDisconnectTarget,\r\n  cystackUpdateEmail,\r\n  getCystackConfig: () => cystackConfig,\r\n};\r\n\r\nconst REDIRECT = 'REDIRECT';\r\nconst cystackBaseUrl = cystackConfig.cystackBaseUrl;\r\n\r\nfunction createConnectionToiFrame(iframe) {\r\n  return connectToChild({\r\n    // The iframe to which a connection should be made\r\n    iframe,\r\n    childOrigin: cystackBaseUrl,\r\n    // Methods the parent is exposing to the child\r\n    methods\r\n  });\r\n}\r\n\r\nexport function initInterframe(iframe) {\r\n  if (!iframe) return;\r\n  if (!window.cystackChildFrameConnection) {\r\n    window.cystackChildFrameConnection = createConnectionToiFrame(iframe);\r\n  }\r\n  const handleNavigation = event => {\r\n    if (event.origin !== cystackBaseUrl) return;\r\n    try {\r\n      const data = JSON.parse(event.data);\r\n      // handle here\r\n    } catch (e) {\r\n      // Error in parsing message\r\n    }\r\n  };\r\n\r\n  window.addEventListener('message', handleNavigation);\r\n\r\n  const redirectToLogin = event => {\r\n    if (event.data === 'unauthorized') {\r\n      window.removeEventListener('message', redirectToLogin);\r\n      iframe.src = cystackConfig.loginUrl;\r\n    }\r\n  };\r\n\r\n  const currentPage = getQueryParam('page');\r\n  if (currentPage !== 'cystack') {\r\n    window.addEventListener('message', redirectToLogin);\r\n  }\r\n\r\n}\r\n","export function cystackClearQueryParam() {\r\n  let currentWindowLocation = window.location.toString();\r\n  if (currentWindowLocation.indexOf('?') > 0) {\r\n    currentWindowLocation = currentWindowLocation.substring(\r\n      0,\r\n      currentWindowLocation.indexOf('?')\r\n    );\r\n  }\r\n  const newWindowLocation = `${currentWindowLocation}?page=cystack`;\r\n  window.history.pushState({}, '', newWindowLocation);\r\n}\r\n\r\nexport function getQueryParam(key) {\r\n  const query = window.location.search.substring(1);\r\n  const vars = query.split('&');\r\n  for (let i = 0; i < vars.length; i++) {\r\n    const pair = vars[i].split('=');\r\n    if (decodeURIComponent(pair[0]) === key) {\r\n      return decodeURIComponent(pair[1]);\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","import { post } from './wordpressClient';\r\n\r\nexport function cystackConnectTarget(targetInfo) {\r\n  return post('cystack_registration_ajax', targetInfo);\r\n}\r\n\r\nexport function cystackDisconnectTarget() {\r\n  return post('cystack_disconnect_ajax', {});\r\n}\r\n\r\nexport function cystackClearMetaTag() {\r\n  return post('cystack_clear_meta_ajax', {});\r\n}\r\n\r\nexport function cystackUpdateEmail(data) {\r\n  return post('cystack_update_email_ajax', data);\r\n}","import {\r\n  targetId,\r\n  targetName,\r\n  targetAddress,\r\n  cystackEmail\r\n} from '../constants/cystackConfig';\r\n\r\nexport const cystackGetTargetInfo = () => ({\r\n  targetId,\r\n  targetName,\r\n  targetAddress,\r\n  cystackEmail\r\n});\r\n","import $ from 'jquery';\r\n\r\nimport { createIframe } from './lib/iframe';\r\n\r\nfunction main() {\r\n    $(document).ready(() => {\r\n        createIframe();\r\n    });\r\n}\r\n\r\nmain();","import $ from 'jquery';\r\nimport { initInterframe } from './Interframe';\r\nimport { iframeUrl } from '../constants/cystackConfig';\r\n\r\nexport const createIframe = () => {\r\n    const container = $('#cystack-iframe-container');\r\n    const $iframe = $(`<iframe id=\"cystack-iframe\" src=\"${iframeUrl}\"></iframe>`);\r\n    initInterframe($iframe[0]);\r\n    container.append($iframe);\r\n};\r\n"],"sourceRoot":""}